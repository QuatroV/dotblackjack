{"version":3,"sources":["components/EndgameMessage.jsx","constants/deck.js","components/StyledWrapper.jsx","components/CardList/CardList.jsx","components/CardList/CardListElement.jsx","components/MainTitle.jsx","components/Button.jsx","pages/Blackjack.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledMessage","styled","div","StyledDraw","StyledWin","StyledLose","EndgameMessage","result_type","yourTotal","opponentTotal","isYouOverdrawn","isOpponentOverdrawn","returnStyling","deck","name","value","icon","variableValue","StyledWrapper","CardList","ul","CardListElement","li","MainTitle","h1","Button","button","StyledImg","img","StyledText","p","StyledContainer","StyledGameScreen","StyledButtonSection","StyledMoneyBar","Blackjack","useState","setDeck","takeCardfromDeck","taken_card","_","sample","filter","card","getTotal","cards","reduce","sum","opponentCards","setOpponentCards","yourCards","setYourCards","showHands","setShowHands","gameState","setGameState","startGame","console","log","useEffect","fullDeck","pile","money","StartScreen","onClick","GameScreen","map","src","alt","current_card","newCard","concat","SwitchBetweenScreens","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f91aa951.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst EndgameMessage = ({ yourTotal, opponentTotal }) => {\r\n  const isYouOverdrawn = yourTotal > 21;\r\n  const isOpponentOverdrawn = opponentTotal > 21;\r\n  let result_type;\r\n  if ((isYouOverdrawn && isOpponentOverdrawn) || yourTotal === opponentTotal)\r\n    result_type = \"draw\";\r\n  else if (\r\n    isYouOverdrawn ||\r\n    (yourTotal < opponentTotal && !isOpponentOverdrawn)\r\n  )\r\n    result_type = \"lose\";\r\n  else result_type = \"win\";\r\n\r\n  const returnStyling = () => {\r\n    switch (result_type) {\r\n      case \"win\":\r\n        return <StyledWin>You won!</StyledWin>;\r\n      case \"draw\":\r\n        return <StyledDraw>Draw!</StyledDraw>;\r\n      case \"lose\":\r\n        return <StyledLose>You lost!</StyledLose>;\r\n    }\r\n  };\r\n\r\n  return <StyledMessage>{returnStyling()}</StyledMessage>;\r\n};\r\n\r\nconst StyledMessage = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst StyledDraw = styled.div`\r\n  padding: 8px;\r\n  border: 1px solid Peru;\r\n  border-radius: 3px;\r\n  background-color: LightGoldenRodYellow;\r\n`;\r\n\r\nconst StyledWin = styled.div`\r\n  padding: 8px;\r\n  border: 1px solid darkGreen;\r\n  border-radius: 3px;\r\n  background-color: LightGreen;\r\n`;\r\n\r\nconst StyledLose = styled.div`\r\n  padding: 8px;\r\n  border: 1px solid Sienna;\r\n  border-radius: 3px;\r\n  background-color: LightPink;\r\n`;\r\n\r\nexport default EndgameMessage;\r\n","const deck = [\r\n  {\r\n    name: \"6 Clubs\",\r\n    value: 6,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Playing_card_club_6.svg/40px-Playing_card_club_6.svg.png\",\r\n  },\r\n  {\r\n    name: \"7 Clubs\",\r\n    value: 7,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Playing_card_club_7.svg/40px-Playing_card_club_7.svg.png\",\r\n  },\r\n  {\r\n    name: \"8 Clubs\",\r\n    value: 8,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Playing_card_club_8.svg/40px-Playing_card_club_8.svg.png\",\r\n  },\r\n  {\r\n    name: \"9 Clubs\",\r\n    value: 9,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Playing_card_club_8.svg/40px-Playing_card_club_9.svg.png\",\r\n  },\r\n  {\r\n    name: \"10 Clubs\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Playing_card_club_8.svg/40px-Playing_card_club_10.svg.png\",\r\n  },\r\n  {\r\n    name: \"Jack of Clubs\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Playing_card_club_J.svg/40px-Playing_card_club_J.svg.png\",\r\n  },\r\n  {\r\n    name: \"Queen of Clubs\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Playing_card_club_Q.svg/40px-Playing_card_club_Q.svg.png\",\r\n  },\r\n  {\r\n    name: \"King of Clubs\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Playing_card_club_K.svg/40px-Playing_card_club_K.svg.png\",\r\n  },\r\n  {\r\n    name: \"Ace of Clubs\",\r\n    value: 1,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Playing_card_club_A.svg/40px-Playing_card_club_A.svg.png\",\r\n    variableValue: true,\r\n  },\r\n  {\r\n    name: \"6 Diamonds\",\r\n    value: 6,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Playing_card_diamond_6.svg/40px-Playing_card_diamond_6.svg.png\",\r\n  },\r\n  {\r\n    name: \"7 Diamonds\",\r\n    value: 7,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Playing_card_diamond_7.svg/40px-Playing_card_diamond_7.svg.png\",\r\n  },\r\n  {\r\n    name: \"8 Diamonds\",\r\n    value: 8,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Playing_card_diamond_8.svg/40px-Playing_card_diamond_8.svg.png\",\r\n  },\r\n  {\r\n    name: \"9 Diamonds\",\r\n    value: 9,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Playing_card_diamond_9.svg/40px-Playing_card_diamond_9.svg.png\",\r\n  },\r\n  {\r\n    name: \"10 Diamonds\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Playing_card_diamond_10.svg/40px-Playing_card_diamond_10.svg.png\",\r\n  },\r\n  {\r\n    name: \"Jack of Diamonds\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Playing_card_diamond_J.svg/40px-Playing_card_diamond_J.svg.png\",\r\n  },\r\n  {\r\n    name: \"Queen of Diamonds\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Playing_card_diamond_Q.svg/40px-Playing_card_diamond_Q.svg.png\",\r\n  },\r\n  {\r\n    name: \"King of Diamonds\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Playing_card_diamond_K.svg/40px-Playing_card_diamond_K.svg.png\",\r\n  },\r\n  {\r\n    name: \"Ace of Diamonds\",\r\n    value: 1,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Playing_card_diamond_A.svg/40px-Playing_card_diamond_A.svg.png\",\r\n    variableValue: true,\r\n  },\r\n  {\r\n    name: \"6 Hearts\",\r\n    value: 6,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Playing_card_heart_6.svg/40px-Playing_card_heart_6.svg.png\",\r\n  },\r\n  {\r\n    name: \"7 Hearts\",\r\n    value: 7,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Playing_card_heart_7.svg/40px-Playing_card_heart_7.svg.png\",\r\n  },\r\n  {\r\n    name: \"8 Hearts\",\r\n    value: 8,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Playing_card_heart_8.svg/40px-Playing_card_heart_8.svg.png\",\r\n  },\r\n  {\r\n    name: \"9 Hearts\",\r\n    value: 9,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Playing_card_heart_9.svg/40px-Playing_card_heart_9.svg.png\",\r\n  },\r\n  {\r\n    name: \"10 Hearts\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Playing_card_heart_10.svg/40px-Playing_card_heart_10.svg.png\",\r\n  },\r\n  {\r\n    name: \"Jack of Hearts\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Playing_card_heart_J.svg/40px-Playing_card_heart_J.svg.png\",\r\n  },\r\n  {\r\n    name: \"Queen of Hearts\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Playing_card_heart_Q.svg/40px-Playing_card_heart_Q.svg.png\",\r\n  },\r\n  {\r\n    name: \"King of Hearts\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Playing_card_heart_K.svg/40px-Playing_card_heart_K.svg.png\",\r\n  },\r\n  {\r\n    name: \"Ace of Hearts\",\r\n    value: 1,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Playing_card_heart_A.svg/40px-Playing_card_heart_A.svg.png\",\r\n    variableValue: true,\r\n  },\r\n  {\r\n    name: \"6 Spades\",\r\n    value: 6,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Playing_card_spade_6.svg/40px-Playing_card_spade_6.svg.png\",\r\n  },\r\n  {\r\n    name: \"7 Spades\",\r\n    value: 7,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Playing_card_spade_7.svg/40px-Playing_card_spade_7.svg.png\",\r\n  },\r\n  {\r\n    name: \"8 Spades\",\r\n    value: 8,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Playing_card_spade_8.svg/40px-Playing_card_spade_8.svg.png\",\r\n  },\r\n  {\r\n    name: \"9 Spades\",\r\n    value: 9,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Playing_card_spade_9.svg/40px-Playing_card_spade_9.svg.png\",\r\n  },\r\n  {\r\n    name: \"10 Spades\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Playing_card_spade_10.svg/40px-Playing_card_spade_10.svg.png\",\r\n  },\r\n  {\r\n    name: \"Jack of Spades\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Playing_card_spade_J.svg/40px-Playing_card_spade_J.svg.png\",\r\n  },\r\n  {\r\n    name: \"Queen of Spades\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Playing_card_spade_Q.svg/40px-Playing_card_spade_Q.svg.png\",\r\n  },\r\n  {\r\n    name: \"King of Spades\",\r\n    value: 10,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Playing_card_spade_K.svg/40px-Playing_card_spade_K.svg.png\",\r\n  },\r\n  {\r\n    name: \"Ace of Spades\",\r\n    value: 1,\r\n    icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Playing_card_spade_A.svg/40px-Playing_card_spade_A.svg.png\",\r\n    variableValue: true,\r\n  },\r\n];\r\n\r\nexport default deck;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 5px;\r\n  padding: 16px;\r\n  min-width: 700px;\r\n  background-color: WhiteSmoke;\r\n  -webkit-box-shadow: 10px 7px 20px 3px rgba(34, 60, 80, 0.34);\r\n  -moz-box-shadow: 10px 7px 20px 3px rgba(34, 60, 80, 0.34);\r\n  box-shadow: 10px 7px 20px 3px rgba(34, 60, 80, 0.34);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default StyledWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst CardList = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default CardList;\r\n","import styled from \"styled-components\";\r\n\r\nconst CardListElement = styled.li`\r\n  display: block;\r\n  float: left;\r\n  margin-right: 10px;\r\n  width: 100px;\r\n`;\r\n\r\nexport default CardListElement;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainTitle = styled.h1`\r\n  font-family: \"Roboto Mono\", monospace;\r\n`;\r\n\r\nexport default MainTitle;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  border-radius: 3px;\r\n  margin: 5px;\r\n  padding: 15px 32px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  cursor: pointer;\r\n  -webkit-box-shadow: 0px 7px 38px -6px rgba(34, 60, 80, 0.57);\r\n  -moz-box-shadow: 0px 7px 38px -6px rgba(34, 60, 80, 0.57);\r\n  box-shadow: 0px 7px 38px -6px rgba(34, 60, 80, 0.57);\r\n  max-width: 190px;\r\n  :active {\r\n    background-color: darkGray;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import _ from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport EndgameMessage from \"../components/EndgameMessage\";\r\n\r\nimport fullDeck from \"../constants/deck\";\r\n\r\nimport StyledWrapper from \"../components/StyledWrapper\";\r\nimport CardList from \"../components/CardList/CardList\";\r\nimport CardListElement from \"../components/CardList/CardListElement\";\r\nimport MainTitle from \"../components/MainTitle\";\r\nimport Button from \"../components/Button\";\r\n\r\nconst Blackjack = () => {\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  const takeCardfromDeck = () => {\r\n    const taken_card = _.sample(deck);\r\n    setDeck(deck.filter((card) => card !== taken_card));\r\n    return taken_card;\r\n  };\r\n\r\n  const getTotal = (cards) => cards.reduce((sum, card) => sum + card.value, 0);\r\n\r\n  const [opponentCards, setOpponentCards] = useState([]);\r\n  const [yourCards, setYourCards] = useState([]);\r\n  const [showHands, setShowHands] = useState(false);\r\n\r\n  const addCardToYourPile = () => {\r\n    const newCard = takeCardfromDeck();\r\n    setYourCards(yourCards.concat(newCard));\r\n  };\r\n\r\n  const showCards = () => {\r\n    setGameState(\"opponentTurn\");\r\n    setShowHands(true);\r\n  };\r\n\r\n  const [gameState, setGameState] = useState(\"startScreen\");\r\n\r\n  const yourTotal = getTotal(yourCards);\r\n  const opponentTotal = getTotal(opponentCards);\r\n\r\n  const isYouOverdrawn = yourTotal > 21;\r\n\r\n  const startGame = () => {\r\n    console.log(\"startGame\");\r\n    setGameState(\"init\");\r\n  };\r\n\r\n  const initialDraw = () => {\r\n    setGameState(\"yourTurn\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"init\") {\r\n      setDeck(fullDeck);\r\n      console.log(\"init\");\r\n      setShowHands(false);\r\n      setYourCards([]);\r\n      setOpponentCards([]);\r\n    } else if (gameState === \"opponentTurn\") {\r\n      console.log(\"opponentTurn\");\r\n      let pile = [takeCardfromDeck(), takeCardfromDeck()];\r\n      while (getTotal(pile) < 18) pile = [...pile, takeCardfromDeck()];\r\n      setOpponentCards(pile);\r\n    } else if (gameState === \"yourTurn\") {\r\n      console.log(\"yourTurn\");\r\n      let pile = [takeCardfromDeck(), takeCardfromDeck()];\r\n      while (getTotal(pile) < 18) pile = [...pile, takeCardfromDeck()];\r\n      setYourCards(pile);\r\n    }\r\n  }, [gameState]);\r\n\r\n  const [money, setMoney] = useState(100);\r\n\r\n  const StartScreen = (\r\n    <StyledGameScreen>\r\n      <StyledText>\r\n        Welcome to simple blackjack game! Press the \"Start Game\" button to\r\n        begin.\r\n      </StyledText>\r\n      <Button onClick={startGame}>Start Game</Button>\r\n    </StyledGameScreen>\r\n  );\r\n\r\n  const GameScreen = (\r\n    <StyledGameScreen>\r\n      Your total is {yourTotal}. Your cards are:\r\n      <CardList>\r\n        {yourCards.map((card) => (\r\n          <CardListElement key={card.name}>\r\n            <StyledImg\r\n              src={card.icon}\r\n              alt=\"\"\r\n              onClick={\r\n                card.variableValue\r\n                  ? () =>\r\n                      setYourCards((cards) =>\r\n                        cards.map((current_card) =>\r\n                          current_card === card\r\n                            ? { ...current_card, value: 10 }\r\n                            : current_card\r\n                        )\r\n                      )\r\n                  : null\r\n              }\r\n            />\r\n            {card.name}\r\n          </CardListElement>\r\n        ))}\r\n      </CardList>\r\n      {showHands ? (\r\n        <>\r\n          Oppponent total is {opponentTotal}. Opponents cards are:\r\n          <CardList>\r\n            {opponentCards.map((card) => (\r\n              <CardListElement key={card.name}>\r\n                <img src={card.icon} alt=\"\" /> <br />\r\n                {card.name}\r\n              </CardListElement>\r\n            ))}\r\n          </CardList>\r\n          <EndgameMessage yourTotal={yourTotal} opponentTotal={opponentTotal} />\r\n          <Button onClick={startGame}>New game</Button>\r\n        </>\r\n      ) : (\r\n        <StyledButtonSection>\r\n          {!isYouOverdrawn && (\r\n            <Button onClick={addCardToYourPile}>Take another card</Button>\r\n          )}\r\n          <Button onClick={showCards}>Open hand</Button>\r\n        </StyledButtonSection>\r\n      )}\r\n    </StyledGameScreen>\r\n  );\r\n\r\n  const SwitchBetweenScreens = () => {\r\n    switch (gameState) {\r\n      case \"startScreen\":\r\n        return StartScreen;\r\n      case \"init\":\r\n      case \"opponentTurn\":\r\n      case \"yourTurn\":\r\n        return GameScreen;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <MainTitle>dotBlackjack</MainTitle>\r\n      <StyledMoneyBar>Your money: {money}$</StyledMoneyBar>\r\n      <StyledWrapper>{SwitchBetweenScreens()}</StyledWrapper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledImg = styled.img`\r\n  display: block;\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n  margin-top: 0px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledGameScreen = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledButtonSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledMoneyBar = styled.div`\r\n  padding: 8px;\r\n  border-radius: 3px;\r\n  display: block;\r\n  margin-top: 0px;\r\n  margin-bottom: 8px;\r\n  min-width: 200px;\r\n  max-width: 400px;\r\n  text-align: center;\r\n  background-color: WhiteSmoke;\r\n  -webkit-box-shadow: 0px 5px 38px -6px rgba(34, 60, 80, 0.57);\r\n  -moz-box-shadow: 0px 5px 38px -6px rgba(34, 60, 80, 0.57);\r\n  box-shadow: 0px 5px 38px -6px rgba(34, 60, 80, 0.57);\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nexport default Blackjack;\r\n","import Blackjack from \"./pages/Blackjack\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Blackjack />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}